<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gooalgene.iqgs.dao.DNAGenBaseInfoDao">
    <select id="findByConditions"
            resultType="com.gooalgene.iqgs.entity.DNAGenBaseInfo">
        SELECT a.*, b.functions from gens_baseinfo a JOIN mrna_gens b on
        a.gene_id = b.gene
        <where>
            <if test="geneId!=null">
                a.gene_id LIKE CONCAT('%', #{geneId}, '%')
            </if>
            <if test="geneOldId!=null">
                OR a.gene_id_old LIKE CONCAT('%', #{geneOldId}, '%')
            </if>
            <if test="geneName!=null">
                OR a.gene_name LIKE CONCAT('%', #{geneName}, '%')
            </if>
            <if test="functions!=null">
                OR b.functions LIKE CONCAT('%', #{functions}, '%')
            </if>
        </where>
    </select>

    <select id="findGeneInQTLIds" resultType="com.gooalgene.iqgs.entity.DNAGenBaseInfo">
        SELECT a.* FROM gens_baseinfo a
        LEFT JOIN qtl_gene b ON a.id = b.gene_info_id
        LEFT JOIN associatedgenes c ON b.qtl_id = c.id
        WHERE c.id IN
        <foreach collection="list" item="item" open="(" separator="," close=")">
          #{item}
        </foreach>
    </select>

    <select id="findByGeneId"
            resultMap="dnaGenBaseInfoMap">
        SELECT a.*, b.functions from gens_baseinfo a JOIN mrna_gens b on a.gene_id = b.gene
        WHERE a.gene_id = #{geneId}
    </select>

    <resultMap type="com.gooalgene.iqgs.entity.DNAGenBaseInfo" id="dnaGenBaseInfoMap">
        <id property="geneId" column="gene_id"/>
        <result property="geneOldId" column="gene_id_old"/>
        <result property="geneName" column="gene_name"/>
        <result property="geneType" column="gene_type"/>
        <result property="locus" column="locus"/>
        <result property="length" column="length"/>
        <result property="species" column="species"/>
        <result property="functions" column="functions"/>
        <result property="description" column="description"/>
        <result property="familyId" column="family_id"/>
    </resultMap>

    <select id="findGenSequenceByGeneId"
            resultType="com.gooalgene.iqgs.entity.DNAGenSequence">
        SELECT * FROM gens_sequence WHERE gene_id = #{geneId}
    </select>

    <select id="findGenStructureByTranscriptId"
            resultType="com.gooalgene.iqgs.entity.DNAGenStructure">
        SELECT a.*, b.length AS maxLength, b.offset FROM gens_structure a LEFT JOIN gens_offset b  ON a.gene_id = b.gene_id
        WHERE a.transcript_id = #{transcriptId};
    </select>

    <select id="findGenAnnoGoByGeneId"
            resultType="com.gooalgene.iqgs.entity.DNAGenAnnoGo">
        SELECT * FROM gens_anno_go WHERE gene_id = #{geneId}
    </select>

    <select id="findGenAnnoIprByGeneId"
            resultType="com.gooalgene.iqgs.entity.DNAGenAnnoIpr">
        SELECT * FROM gens_anno_ipr WHERE gene_id = #{geneId}
    </select>

    <select id="findGenAnnoKeggByGeneId"
            resultType="com.gooalgene.iqgs.entity.DNAGenAnnoKegg">
        SELECT * FROM gens_anno_kegg WHERE gene_id = #{geneId}
    </select>

    <select id="findGenStructureByGeneId"
            resultType="com.gooalgene.iqgs.entity.DNAGenStructure">
        SELECT a.*, b.length AS maxLength, b.offset FROM gens_structure a LEFT JOIN gens_offset b  ON a.gene_id = b.gene_id
        WHERE a.gene_id = #{geneId};
    </select>

    <select id="findGenByChr"
            parameterType="com.gooalgene.iqgs.entity.DNAGenStructure"
            resultType="com.gooalgene.iqgs.entity.DNAGenStructure">
        SELECT DISTINCT gene_id FROM gens_structure
        WHERE chromosome = #{chromosome}
        AND (
            (start &gt;#{start} AND start &lt;#{end})
             OR
             (end &gt;#{start} AND end &lt;#{end})
              OR
              (start &lt;#{start} AND end &gt;#{start})
            )
    </select>

    <select id="findGenHomologousByGeneId"
            resultType="com.gooalgene.iqgs.entity.DNAGenHomologous">
        SELECT gene_id,ortholog_species,ortholog_gene_id,ortholog_gene_desc AS orthologGeneDescription,relationship FROM homologous_gene WHERE gene_id = #{geneId};
    </select>

    <select id="findBaseInfoByFamilyId"
            resultType="com.gooalgene.iqgs.entity.DNAGenBaseInfo">
        SELECT b.* FROM gens_baseinfo b,gens_family_rel r WHERE b.gene_id=r.gene_id AND r.family_id = #{familyId}
    </select>

    <select id="findFamilyByGeneId"
            resultType="com.gooalgene.iqgs.entity.DNAGenFamilyRel">
        SELECT * from gens_family_rel WHERE gene_id = #{geneId}
    </select>

    <select id="findOffsetByFamilyId"
            resultType="com.gooalgene.iqgs.entity.DNAGenOffset">
        SELECT o.gene_id, o.length, baseinfo.gene_name
FROM gens_family_rel f, gens_offset o, gens_baseinfo baseinfo
WHERE f.gene_id =o.gene_id AND f.gene_id = baseinfo.gene_id AND family_id = #{familyId}
    </select>

    <select id="findFamilyByFamilyId"
            resultType="com.gooalgene.iqgs.entity.DNAGenFamily">
        SELECT * from gens_family WHERE family_id = #{familyId}
    </select>

    <select id="findStructureByFamilyId"
            resultType="com.gooalgene.iqgs.entity.DNAGenFamilyStructure">
        SELECT * from gens_family_structure WHERE family_id = #{familyId}
    </select>

    <select id="findMaxLengthByFamilyId" resultType="int"
            parameterType="string">
        SELECT MAX(s.end) FROM gens_family_structure s WHERE family_id = #{familyId}
    </select>

    <select id="findSequenceByTranscriptId" resultType="string"
            parameterType="string">
        SELECT sequence FROM gens_transcript_seq WHERE transcript_id = #{transcriptId}
    </select>

    <select id="checkGeneExists" resultType="int">
        SELECT id FROM gens_baseinfo WHERE gene_id = #{0} OR gene_id_old = #{0}
    </select>

    <select id="checkGeneExistsInQtlList" resultType="boolean">
        SELECT exists(SELECT 1 FROM qtl_gene WHERE 1 = 1 AND gene_info_id = #{0} AND qtl_id IN
        <foreach collection="qtlList" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
        )
    </select>

    <select id="findAllAssociatedQTLByGeneId" resultType="com.gooalgene.entity.Associatedgenes">
        SELECT a.qtl_name FROM associatedgenes a
            LEFT JOIN qtl_gene b ON a.id = b.qtl_id
            LEFT JOIN gens_baseinfo c ON b.gene_info_id = c.id
        WHERE c.gene_id = #{geneId} OR c.gene_id_old = #{geneId}
    </select>

    <select id="getFrontHundredGene" resultType="int">
        SELECT id FROM gens_baseinfo LIMIT 0, 100;
    </select>
</mapper>