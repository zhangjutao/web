<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gooalgene.iqgs.dao.GeneSortDao">

    <resultMap id="sortedMap" type="com.gooalgene.iqgs.entity.sort.SortedSearchResultView">
        <id property="id" column="gene_id" javaType="string" jdbcType="VARCHAR" />
        <result property="chromosome" column="locus" jdbcType="VARCHAR" typeHandler="com.gooalgene.iqgs.dao.handler.LocusToChromosomeHandler" />
        <result property="location" column="locus" jdbcType="VARCHAR" typeHandler="com.gooalgene.iqgs.dao.handler.LocusToGeneLocationHandler" />
        <association property="fpkm" javaType="com.gooalgene.iqgs.entity.GeneFPKM" >
            <id property="id" column="id" jdbcType="INTEGER" />
            <result property="pod" column="pod" jdbcType="DOUBLE" />
            <result property="endosperm" column="endosperm" jdbcType="DOUBLE" />
            <result property="seed" column="seed" jdbcType="DOUBLE" />
            <result property="embryo" column="embryo" jdbcType="DOUBLE" />
            <result property="axis" column="axis" jdbcType="DOUBLE" />
            <result property="cotyledon" column="cotyledon" jdbcType="DOUBLE" />
            <result property="seedCoat" column="seed_coat" jdbcType="DOUBLE" />
            <result property="nodule" column="nodule" jdbcType="DOUBLE" />
            <result property="root_hair" column="rootHair" jdbcType="DOUBLE" />
            <result property="root" column="root" jdbcType="DOUBLE" />
            <result property="root_tip" column="rootTip" jdbcType="DOUBLE" />
            <result property="shoot" column="shoot" jdbcType="DOUBLE" />
            <result property="shootTip" column="shoot_tip" jdbcType="DOUBLE" />
            <result property="shootApicalMeristem" column="shoot_apical_meristem" jdbcType="DOUBLE" />
            <result property="shootMeristem" column="shoot_meristem" jdbcType="DOUBLE" />
            <result property="primaryleaf" column="primaryleaf" jdbcType="DOUBLE" />
            <result property="petiole" column="petiole" jdbcType="DOUBLE" />
            <result property="leaf" column="leaf" jdbcType="DOUBLE" />
            <result property="trifoliate" column="trifoliate" jdbcType="DOUBLE" />
            <result property="leafbud" column="leafbud" jdbcType="DOUBLE" />
            <result property="leaflet" column="leaflet" jdbcType="DOUBLE" />
            <result property="cotyledonsOfSeedling" column="cotyledons_of_seedling" jdbcType="DOUBLE" />
            <result property="seedling" column="seedling" jdbcType="DOUBLE" />
            <result property="flower_bud" column="flowerBud" jdbcType="DOUBLE" />
            <result property="flower" column="flower" jdbcType="DOUBLE" />
            <result property="stem" column="stem" jdbcType="DOUBLE" />
            <result property="stemInternode" column="stem_internode" jdbcType="DOUBLE" />
            <result property="hypocotyl" column="hypocotyl" jdbcType="DOUBLE" />
        </association>
        <association property="baseInfo" javaType="com.gooalgene.iqgs.entity.DNAGenBaseInfo">
            <result property="geneId" column="gene_id" jdbcType="VARCHAR" />
            <result property="geneName" column="gene_name" jdbcType="VARCHAR" />
            <result property="description" column="description" jdbcType="VARCHAR" />
        </association>
        <collection property="snpConsequenceType" ofType="com.gooalgene.iqgs.entity.sort.SnpScore">
            <result column="snp_consequencetype" property="consequencetype" />
            <result column="snp_score" property="score" />
            <result column="snp_count" property="count" />
        </collection>
        <collection property="indelConsequenceType" ofType="com.gooalgene.iqgs.entity.sort.IndelScore">
            <result column="indel_consequencetype" property="consequencetype" />
            <result column="indel_score" property="score" />
            <result column="indel_count" property="count" />
        </collection>
        <collection property="allQtl" ofType="String">
            <result column="qtl_name" />
        </collection>
    </resultMap>

    <resultMap id="calculateResultMap" type="com.gooalgene.iqgs.entity.sort.SortedResult">
        <result property="geneId" column="gene_id" jdbcType="VARCHAR" />
        <result property="geneName" column="gene_name" jdbcType="VARCHAR" />
        <result property="description" column="description" jdbcType="VARCHAR" />
        <result property="chromosome" column="locus" jdbcType="VARCHAR" typeHandler="com.gooalgene.iqgs.dao.handler.LocusToChromosomeHandler" />
        <result property="location" column="locus" jdbcType="VARCHAR" typeHandler="com.gooalgene.iqgs.dao.handler.LocusToGeneLocationHandler" />
    </resultMap>

    <select id="findViewByGeneId" resultMap="sortedMap">
        SELECT
            <choose >
                <when test="fields!=null and fields!=''" >
                    ${fields},
                </when>
                <otherwise>
                    a.*,
                </otherwise>
            </choose>
            f.gene_id,
            f.gene_name,
            f.locus,
            f.description,
            c.consequencetype AS    snp_consequencetype,
            c.score                 snp_score,
            b.consequencetype_count snp_count,
            e.consequencetype AS    indel_consequencetype,
            e.score                 indel_score,
            d.consequencetype_count indel_count,
            h.qtl_name
            FROM
            fpkm a LEFT JOIN fpkm_associate_snp b ON a.id = b.fpkm_id
            LEFT JOIN snp_consequencetype c ON c.id = b.snp_id
            LEFT JOIN fpkm_associate_indel d ON a.id = d.fpkm_id
            LEFT JOIN indel_consequencetype e ON e.id = d.indel_id
            LEFT JOIN gens_baseinfo f ON f.gene_id = a.gene_id
            LEFT JOIN qtl_gene g ON g.gene_info_id = f.id
            LEFT JOIN associatedgenes h ON h.id = g.qtl_id
              WHERE a.gene_id in
        <foreach collection="geneIds" item="geneId" open="(" close=")" separator=",">
            #{geneId}
        </foreach>
    </select>

    <select id="findCalculateSortedResult" resultType="com.gooalgene.iqgs.entity.sort.CalculateScoreResult">
        SELECT
            a.gene_id,
          (coalesce(snp_score, 0) + coalesce(indel_score, 0) + coalesce(count(k.qtl_name)*10, 0) + j.fpkmTotal/#{fieldSize}) AS score
        FROM fpkm a
            LEFT JOIN (SELECT a.gene_id ,
                            CASE WHEN sum(f.score * e.consequencetype_count) / count(e.snp_id) IS NULL
                            THEN 0
                            ELSE sum(f.score * e.consequencetype_count) / count(e.snp_id)
                            END AS snp_score
                      FROM fpkm a
                              LEFT JOIN fpkm_associate_snp e ON e.fpkm_id = a.id
                              LEFT JOIN snp_consequencetype f ON e.snp_id = f.id
                              WHERE e.snp_id NOT IN (6, 13, 14)
                          GROUP BY a.gene_id) AS g ON g.gene_id = a.gene_id
            LEFT JOIN (SELECT a.gene_id ,
                CASE WHEN sum(f.score * e.consequencetype_count) / count(e.indel_id) IS NULL
                THEN 0
                ELSE sum(f.score * e.consequencetype_count) / count(e.indel_id)
                END AS indel_score FROM fpkm a
                LEFT JOIN fpkm_associate_indel e ON e.fpkm_id = a.id
                LEFT JOIN indel_consequencetype f ON f.id = e.indel_id
                WHERE e.indel_id NOT IN (5, 13, 14)
            GROUP BY a.gene_id) AS h ON h.gene_id = a.gene_id
            LEFT JOIN (SELECT
                a.gene_id,
                a.qtl_name
                FROM qtl_gene a
                LEFT JOIN category_associate_trait b ON a.qtl_trait_id = b.trait_list_id
                WHERE b.trait_category_id = #{traitCategoryId}
                GROUP BY gene_id, qtl_name) AS k ON k.gene_id = a.gene_id
            LEFT JOIN (SELECT gene_id,
                (
                <trim suffixOverrides="+">
                    <foreach collection="fields" item="item">
                        sum(#{item})+
                    </foreach>
                </trim>
                )
            AS fpkmTotal FROM fpkm_score GROUP BY gene_id) j ON j.gene_id = a.gene_id
            WHERE a.gene_id in
            <foreach collection="geneIds" item="item" separator="," open="(" close=")">
                #{item}
            </foreach>
            GROUP BY a.gene_id
    </select>

    <select id="findSortedResultThroughGeneId" resultMap="calculateResultMap">
        SELECT * FROM gens_baseinfo
          WHERE gene_id IN
        <foreach collection="geneIdList" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
    </select>
</mapper>