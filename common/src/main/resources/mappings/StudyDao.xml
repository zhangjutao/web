<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gooalgene.common.dao.StudyDao">

    <select id="get" resultType="com.gooalgene.entity.Study">
        SELECT * from study where id=#{id}
    </select>

    <select id="findBySID" resultType="com.gooalgene.entity.Study">
        SELECT * from study where sraStudy=#{id}
    </select>

    <select id="findBySampleRun" resultType="com.gooalgene.entity.Study">
        SELECT * from study where sampleRun=#{run}
    </select>

    <select id="findBySampleRuns" resultType="com.gooalgene.entity.Study">
        SELECT * from study where sampleRun IN
        <foreach item="item" index="index" collection="array"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="findByRuns" resultType="Map">
        SELECT * from study where sampleRun IN
        <foreach item="item" index="index" collection="array"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="findStudyMap" resultType="Map">
        SELECT * from study
        WHERE 1=1
        <if test="keywords!=null">
            AND ( sraStudy LIKE CONCAT('%',#{keywords},'%') OR study LIKE CONCAT('%',#{keywords},'%')
            OR sampleName LIKE CONCAT('%',#{keywords},'%') OR sampleRun LIKE CONCAT('%',#{keywords},'%')
            OR tissueForClassification LIKE CONCAT('%',#{keywords},'%') OR treat LIKE CONCAT('%',#{keywords},'%')
            OR stage LIKE CONCAT('%',#{keywords},'%') OR geneType LIKE CONCAT('%',#{keywords},'%')
            OR geoLoc LIKE CONCAT('%',#{keywords},'%') OR ecoType LIKE CONCAT('%',#{keywords},'%')
           OR scientificName LIKE CONCAT('%',#{keywords},'%')
            OR reference LIKE CONCAT('%',#{keywords},'%') OR institution LIKE CONCAT('%',#{keywords},'%')
            OR libraryStrategy LIKE CONCAT('%',#{keywords},'%') OR librarySource LIKE CONCAT('%',#{keywords},'%')
            OR libraryLayout LIKE CONCAT('%',#{keywords},'%') OR experiment LIKE CONCAT('%',#{keywords},'%')
            )
        </if>
    </select>

    <select id="findStudyList" resultType="com.gooalgene.entity.Study">
        SELECT * from study
        WHERE 1=1
        <if test="keywords!=null">
            AND ( sraStudy LIKE CONCAT('%',#{keywords},'%') OR study LIKE CONCAT('%',#{keywords},'%')
            OR sampleName LIKE CONCAT('%',#{keywords},'%') OR sampleRun LIKE CONCAT('%',#{keywords},'%')
            OR tissueForClassification LIKE CONCAT('%',#{keywords},'%') OR treat LIKE CONCAT('%',#{keywords},'%')
            OR stage LIKE CONCAT('%',#{keywords},'%') OR geneType LIKE CONCAT('%',#{keywords},'%')
            OR geoLoc LIKE CONCAT('%',#{keywords},'%') OR ecoType LIKE CONCAT('%',#{keywords},'%')
             OR scientificName LIKE CONCAT('%',#{keywords},'%')
            OR reference LIKE CONCAT('%',#{keywords},'%') OR institution LIKE CONCAT('%',#{keywords},'%')
            OR libraryStrategy LIKE CONCAT('%',#{keywords},'%') OR librarySource LIKE CONCAT('%',#{keywords},'%')
            OR libraryLayout LIKE CONCAT('%',#{keywords},'%') OR experiment LIKE CONCAT('%',#{keywords},'%')
            )
        </if>
    </select>

    <select id="findList" resultType="com.gooalgene.entity.Study">
        SELECT * from study
        WHERE 1=1
        <if test="keywords!=null">
            AND ( sraStudy LIKE CONCAT('%',#{keywords},'%') OR study LIKE CONCAT('%',#{keywords},'%')
            OR sampleName LIKE CONCAT('%',#{keywords},'%') OR sampleRun LIKE CONCAT('%',#{keywords},'%')
            OR tissueForClassification LIKE CONCAT('%',#{keywords},'%') OR treat LIKE CONCAT('%',#{keywords},'%')
            OR stage LIKE CONCAT('%',#{keywords},'%') OR geneType LIKE CONCAT('%',#{keywords},'%')
            OR geoLoc LIKE CONCAT('%',#{keywords},'%') OR ecoType LIKE CONCAT('%',#{keywords},'%')
            OR scientificName LIKE CONCAT('%',#{keywords},'%')
            OR reference LIKE CONCAT('%',#{keywords},'%') OR institution LIKE CONCAT('%',#{keywords},'%')
            OR libraryStrategy LIKE CONCAT('%',#{keywords},'%') OR librarySource LIKE CONCAT('%',#{keywords},'%')
            OR libraryLayout LIKE CONCAT('%',#{keywords},'%') OR experiment LIKE CONCAT('%',#{keywords},'%')
            )
        </if>
        <if test="study!=null">
            AND study LIKE CONCAT('%',#{study},'%')
        </if>
        <if test="sraStudy!=null">
            AND sraStudy LIKE CONCAT('%',#{sraStudy},'%')
        </if>
        <if test="tissues!=null and tissues.size()!=0">
            AND (tissueForClassification IN
            <foreach collection="tissues" item="item"
                     index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>)
        </if>
        <if test="tissue!=null">
            AND tissueForClassification = #{tissue}
        </if>
        <if test="tissueKeywords!=null">
            AND tissueForClassification LIKE CONCAT('%',#{tissueKeywords},'%')
        </if>
        <if test="stage!=null">
            AND stage LIKE CONCAT('%',#{stage},'%')
        </if>
        <if test="treat!=null">
            AND treat LIKE CONCAT('%',#{treat},'%')
        </if>
        <if test="reference!=null">
            AND reference LIKE CONCAT('%',#{reference},'%')
        </if>
        <if test="geneType!=null">
            AND geneType LIKE CONCAT('%',#{geneType},'%')
        </if>
        <if test="preservation!=null">
            AND preservation LIKE CONCAT('%',#{preservation},'%')
        </if>
        <if test="phenoType!=null">
            AND phenoType LIKE CONCAT('%',#{phenoType},'%')
        </if>
        <if test="environment!=null">
            AND environment LIKE CONCAT('%',#{environment},'%')
        </if>
        <if test="scientificName!=null">
            AND scientificName LIKE CONCAT('%',#{scientificName},'%')
        </if>
        <if test="libraryLayout!=null">
            AND libraryLayout LIKE CONCAT('%',#{libraryLayout},'%')
        </if>
        <if test="sampleRun!=null">
            AND sampleRun LIKE CONCAT('%',#{sampleRun},'%')
        </if>
        <if test="experiment!=null">
            AND experiment LIKE CONCAT('%',#{experiment},'%')
        </if>
        <if test="spots!=null">
            AND spots LIKE CONCAT('%',#{spots},'%')
        </if>
    </select>

    <select id="findByCondition" resultType="Map">
        SELECT * from study
        WHERE 1=1
        <if test="keywords!=null">
            AND ( sraStudy LIKE CONCAT('%',#{keywords},'%') OR study LIKE CONCAT('%',#{keywords},'%')
            OR sampleName LIKE CONCAT('%',#{keywords},'%') OR sampleRun LIKE CONCAT('%',#{keywords},'%')
            OR tissueForClassification LIKE CONCAT('%',#{keywords},'%') OR treat LIKE CONCAT('%',#{keywords},'%')
            OR stage LIKE CONCAT('%',#{keywords},'%') OR geneType LIKE CONCAT('%',#{keywords},'%')
            OR geoLoc LIKE CONCAT('%',#{keywords},'%') OR ecoType LIKE CONCAT('%',#{keywords},'%')
            OR scientificName LIKE CONCAT('%',#{keywords},'%')
            OR reference LIKE CONCAT('%',#{keywords},'%') OR institution LIKE CONCAT('%',#{keywords},'%')
            OR libraryStrategy LIKE CONCAT('%',#{keywords},'%') OR librarySource LIKE CONCAT('%',#{keywords},'%')
            OR libraryLayout LIKE CONCAT('%',#{keywords},'%') OR experiment LIKE CONCAT('%',#{keywords},'%')
            )
        </if>
        <if test="study!=null">
            AND study LIKE CONCAT('%',#{study},'%')
        </if>
        <if test="sraStudy!=null">
            AND sraStudy LIKE CONCAT('%',#{sraStudy},'%')
        </if>
        <if test="tissues!=null and tissues.size()!=0">
            AND (tissueForClassification IN
            <foreach collection="tissues" item="item"
                     index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>)
        </if>
        <if test="tissue!=null">
            AND tissueForClassification = #{tissue}
        </if>
        <if test="tissueKeywords!=null">
            AND tissueForClassification LIKE CONCAT('%',#{tissueKeywords},'%')
        </if>
        <if test="stage!=null">
            AND stage LIKE CONCAT('%',#{stage},'%')
        </if>
        <if test="treat!=null">
            AND treat LIKE CONCAT('%',#{treat},'%')
        </if>
        <if test="reference!=null">
            AND reference LIKE CONCAT('%',#{reference},'%')
        </if>
        <if test="geneType!=null">
            AND geneType LIKE CONCAT('%',#{geneType},'%')
        </if>
        <if test="preservation!=null">
            AND preservation LIKE CONCAT('%',#{preservation},'%')
        </if>
        <if test="phenoType!=null">
            AND phenoType LIKE CONCAT('%',#{phenoType},'%')
        </if>
        <if test="environment!=null">
            AND environment LIKE CONCAT('%',#{environment},'%')
        </if>

        <if test="scientificName!=null">
            AND scientificName LIKE CONCAT('%',#{scientificName},'%')
        </if>
        <if test="libraryLayout!=null">
            AND libraryLayout LIKE CONCAT('%',#{libraryLayout},'%')
        </if>
        <if test="sampleRun!=null">
            AND sampleRun LIKE CONCAT('%',#{sampleRun},'%')
        </if>
        <if test="experiment!=null">
            AND experiment LIKE CONCAT('%',#{experiment},'%')
        </if>
        <if test="spots!=null">
            AND spots LIKE CONCAT('%',#{spots},'%')
        </if>
    </select>

    <select id="findById" parameterType="int" resultType="com.gooalgene.entity.Study">
        SELECT * FROM `study` WHERE id=#{id}
    </select>

    <update id="update" parameterType="com.gooalgene.entity.Study">
        UPDATE `study` SET
        `sraStudy` = #{sraStudy},
        `study` = #{study},
        `sampleName` = #{sampleName},
        `isExpression` = #{isExpression},
        `sampleRun` = #{sampleRun},
        `tissue` = #{tissue},
        `tissueForClassification` = #{tissueForClassification},
        `preservation` = #{preservation},
        `treat` = #{treat},
        `stage` = #{stage},
        `geneType` = #{geneType},
        `phenoType` = #{phenoType},
        `environment` = #{environment},
        `geoLoc` = #{geoLoc},
        `ecoType` = #{ecoType},
        `collectionDate` = #{collectionDate},
        `coordinates` = #{coordinates},

        `scientificName` = #{scientificName},
        `pedigree` = #{pedigree},
        `reference` = #{reference},
        `institution` = #{institution},
        `submissionTime` = #{submissionTime},
        `instrument` = #{instrument},
        `libraryStrategy` = #{libraryStrategy},
        `librarySource` = #{librarySource},
        `libraryLayout` = #{libraryLayout},
        `insertSize` = #{insertSize},
        `readLength` = #{readLength},
        `spots` = #{spots},
        `experiment` = #{experiment},
        `links` = #{links}
        WHERE id=#{id}
    </update>

    <delete id="deleteById" parameterType="int">
        DELETE FROM `study` WHERE id=#{id}
    </delete>

    <insert id="insertBatch">
        INSERT INTO `study`
        (`sraStudy`,
        `study`,
        `sampleName`,
        `isExpression`,
        `sampleRun`,
        `tissue`,
        `tissueForClassification`,
        `preservation`,
        `treat`,
        `stage`,
        `geneType`,
        `phenoType`,
        `environment`,
        `geoLoc`,
        `ecoType`,
        `collectionDate`,
        `coordinates`,

        `scientificName`,
        `pedigree`,
        `reference`,
        `institution`,
        `submissionTime`,
        `instrument`,
        `libraryStrategy`,
        `librarySource`,
        `libraryLayout`,
        `insertSize`,
        `readLength`,
        `spots`,
        `experiment`,
        `links`,
        `createTime`)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.sraStudy,jdbcType=VARCHAR},
            #{item.study,jdbcType=VARCHAR},
            #{item.sampleName,jdbcType=VARCHAR},
            #{item.isExpression,jdbcType=INTEGER},
            #{item.sampleRun,jdbcType=VARCHAR},
            #{item.tissue,jdbcType=VARCHAR},
            #{item.tissueForClassification,jdbcType=VARCHAR},
            #{item.preservation,jdbcType=VARCHAR},
            #{item.treat,jdbcType=VARCHAR},
            #{item.stage,jdbcType=VARCHAR},
            #{item.geneType,jdbcType=VARCHAR},
            #{item.phenoType,jdbcType=VARCHAR},
            #{item.environment,jdbcType=VARCHAR},
            #{item.geoLoc,jdbcType=VARCHAR},
            #{item.ecoType,jdbcType=VARCHAR},
            #{item.collectionDate,jdbcType=VARCHAR},
            #{item.coordinates,jdbcType=VARCHAR},

            #{item.scientificName,jdbcType=VARCHAR},
            #{item.pedigree,jdbcType=VARCHAR},
            #{item.reference,jdbcType=VARCHAR},
            #{item.institution,jdbcType=VARCHAR},
            #{item.submissionTime,jdbcType=VARCHAR},
            #{item.instrument,jdbcType=VARCHAR},
            #{item.libraryStrategy,jdbcType=VARCHAR},
            #{item.librarySource,jdbcType=VARCHAR},
            #{item.libraryLayout,jdbcType=VARCHAR},
            #{item.insertSize,jdbcType=VARCHAR},
            #{item.readLength,jdbcType=VARCHAR},
            #{item.spots,jdbcType=INTEGER},
            #{item.experiment,jdbcType=VARCHAR},
            #{item.links,jdbcType=VARCHAR},
            NOW())
        </foreach>
    </insert>

    <insert id="add" parameterType="com.gooalgene.entity.Study">
        INSERT INTO `study`
            (`sraStudy`,
             `study`,
             `sampleName`,
             `isExpression`,
             `sampleRun`,
             `tissue`,
             `tissueForClassification`,
             `preservation`,
             `treat`,
             `stage`,
             `geneType`,
             `phenoType`,
             `environment`,
             `geoLoc`,
             `ecoType`,
             `collectionDate`,
             `coordinates`,

             `scientificName`,
             `pedigree`,
             `reference`,
             `institution`,
             `submissionTime`,
             `instrument`,
             `libraryStrategy`,
             `librarySource`,
             `libraryLayout`,
             `insertSize`,
             `readLength`,
             `spots`,
             `experiment`,
             `links`,
             `createTime`)
VALUES (
        #{sraStudy,jdbcType=VARCHAR},
        #{study,jdbcType=VARCHAR},
        #{sampleName,jdbcType=VARCHAR},
        #{isExpression,jdbcType=INTEGER},
        #{sampleRun,jdbcType=VARCHAR},
        #{tissue,jdbcType=VARCHAR},
        #{tissueForClassification,jdbcType=VARCHAR},
        #{preservation,jdbcType=VARCHAR},
        #{treat,jdbcType=VARCHAR},
        #{stage,jdbcType=VARCHAR},
        #{geneType,jdbcType=VARCHAR},
        #{phenoType,jdbcType=VARCHAR},
        #{environment,jdbcType=VARCHAR},
        #{geoLoc,jdbcType=VARCHAR},
        #{ecoType,jdbcType=VARCHAR},
        #{collectionDate,jdbcType=VARCHAR},
        #{coordinates,jdbcType=VARCHAR},

        #{scientificName,jdbcType=VARCHAR},
        #{pedigree,jdbcType=VARCHAR},
        #{reference,jdbcType=VARCHAR},
        #{institution,jdbcType=VARCHAR},
        #{submissionTime,jdbcType=VARCHAR},
        #{instrument,jdbcType=VARCHAR},
        #{libraryStrategy,jdbcType=VARCHAR},
        #{librarySource,jdbcType=VARCHAR},
        #{libraryLayout,jdbcType=VARCHAR},
        #{insertSize,jdbcType=VARCHAR},
        #{readLength,jdbcType=VARCHAR},
        #{spots,jdbcType=INTEGER},
        #{experiment,jdbcType=VARCHAR},
        #{links,jdbcType=VARCHAR},
        NOW())
    </insert>

    <insert id="insert" parameterType="com.gooalgene.entity.Study">
        INSERT INTO `study`
            (`sraStudy`,
             `study`,
             `sampleName`,
             `isExpression`,
             `sampleRun`,
             `tissue`,
             `tissueForClassification`,
             `preservation`,
             `treat`,
             `stage`,
             `geneType`,
             `phenoType`,
             `environment`,
             `geoLoc`,
             `ecoType`,
             `collectionDate`,
             `coordinates`,

             `scientificName`,
             `pedigree`,
             `reference`,
             `institution`,
             `submissionTime`,
             `instrument`,
             `libraryStrategy`,
             `librarySource`,
             `libraryLayout`,
             `insertSize`,
             `readLength`,
             `spots`,
             `experiment`,
             `links`,
             `createTime`)
VALUES (
        #{sraStudy,jdbcType=VARCHAR},
        #{study,jdbcType=VARCHAR},
        #{sampleName,jdbcType=VARCHAR},
        #{isExpression,jdbcType=INTEGER},
        #{sampleRun,jdbcType=VARCHAR},
        #{tissue,jdbcType=VARCHAR},
        #{tissueForClassification,jdbcType=VARCHAR},
        #{preservation,jdbcType=VARCHAR},
        #{treat,jdbcType=VARCHAR},
        #{stage,jdbcType=VARCHAR},
        #{geneType,jdbcType=VARCHAR},
        #{phenoType,jdbcType=VARCHAR},
        #{environment,jdbcType=VARCHAR},
        #{geoLoc,jdbcType=VARCHAR},
        #{ecoType,jdbcType=VARCHAR},
        #{collectionDate,jdbcType=VARCHAR},
        #{coordinates,jdbcType=VARCHAR},

        #{scientificName,jdbcType=VARCHAR},
        #{pedigree,jdbcType=VARCHAR},
        #{reference,jdbcType=VARCHAR},
        #{institution,jdbcType=VARCHAR},
        #{submissionTime,jdbcType=VARCHAR},
        #{instrument,jdbcType=VARCHAR},
        #{libraryStrategy,jdbcType=VARCHAR},
        #{librarySource,jdbcType=VARCHAR},
        #{libraryLayout,jdbcType=VARCHAR},
        #{insertSize,jdbcType=VARCHAR},
        #{readLength,jdbcType=VARCHAR},
        #{spots,jdbcType=INTEGER},
        #{experiment,jdbcType=VARCHAR},
        #{links,jdbcType=VARCHAR},
        #{createTime,jdbcType=TIMESTAMP})
    </insert>

    <select id="findGenesForFirst" resultType="Map">
        SELECT * FROM gens_for_first
    </select>

    <select id="findGenesForFirstById" resultType="Map">
        SELECT * FROM gens_for_first WHERE id=#{id}
    </select>

    <update id="updateGenesForFirstById">
        UPDATE gens_for_first SET gene=#{gene} WHERE id=#{id}
    </update>

    <select id="queryScientificNames" resultType="Map">
        SELECT DISTINCT scientificName FROM study
    </select>

    <select id="queryLibraryLayouts" resultType="Map">
        SELECT DISTINCT libraryLayout FROM study
    </select>

    <select id="findSampleruns" resultType="string">
        SELECT DISTINCT sampleRun FROM study
    </select>

    <select id="findAllSampleRun" resultType="com.gooalgene.entity.Study">
        SELECT id, sampleRun FROM study;
    </select>

    <select id="findSampleRunByTissueForClassification" resultType="com.gooalgene.entity.Study">
        SELECT id, sampleRun FROM study WHERE tissueForClassification IN
        <foreach collection="tissueForClassification" item="item" open="(" close=")" separator=",">
          #{item}
        </foreach>
    </select>
</mapper>